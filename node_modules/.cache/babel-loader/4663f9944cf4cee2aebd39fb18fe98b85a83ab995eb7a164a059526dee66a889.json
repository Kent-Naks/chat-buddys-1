{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPT_API_URL = 'https://api.openai.com/v1/chat/completions'; // OpenAI API URL\n\nconst topicsData = {\n  political: {\n    didYouKnow: [\"Did you know that the first political parties emerged in the 18th century in the United States?\", \"Did you know that many countries use proportional representation to ensure fair elections?\", \"Did you know that the concept of democracy dates back to ancient Greece?\", \"Did you know that political lobbying is a major influence on legislation in many countries?\", \"Did you know that voter turnout varies greatly between different countries and regions?\"]\n  },\n  emotional: {\n    didYouKnow: [\"Did you know that emotional intelligence can be more important than IQ in achieving success?\", \"Did you know that journaling can help improve emotional well-being?\", \"Did you know that practicing mindfulness can reduce stress and anxiety?\", \"Did you know that social support is crucial for managing emotional health?\", \"Did you know that physical exercise can significantly improve mood and mental health?\"]\n  },\n  scientific: {\n    didYouKnow: [\"Did you know that water makes up about 71% of Earth's surface?\", \"Did you know that light from the Sun takes about 8 minutes to reach Earth?\", \"Did you know that the human brain is about 75% water?\", \"Did you know that the universe is about 13.8 billion years old?\", \"Did you know that honey never spoils and can be edible for thousands of years?\"]\n  }\n};\nfunction ChatConversation() {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    if (topicsData[topic]) {\n      const initialMessage = `Hello! Let's talk about ${topic}. Feel free to ask me anything related to ${topic}.`;\n      setMessages([{\n        text: initialMessage\n      }]);\n    }\n  }, [topic]);\n  const generateResponse = async userMessage => {\n    try {\n      setIsTyping(true);\n      const response = await axios.post(GPT_API_URL, {\n        model: \"gpt-4\",\n        messages: [{\n          role: \"user\",\n          content: userMessage\n        }]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const aiResponse = response.data.choices[0].message.content;\n      const didYouKnowFact = topicsData[topic].didYouKnow[Math.floor(Math.random() * topicsData[topic].didYouKnow.length)];\n      setMessages(prevMessages => [...prevMessages, {\n        text: aiResponse\n      }, {\n        text: `Did you know? ${didYouKnowFact}`\n      }]);\n      setIsTyping(false);\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Sorry, I couldn't generate a response right now.\"\n      }]);\n      setIsTyping(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') {\n      return;\n    }\n    const userMessage = {\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    generateResponse(input);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message typing\",\n        children: \"AI is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"SYxHYybLnCae2DXkIJzzKnei3KY=\", false, function () {\n  return [useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","GPT_API_URL","topicsData","political","didYouKnow","emotional","scientific","ChatConversation","_s","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","isTyping","setIsTyping","initialMessage","text","generateResponse","userMessage","response","post","model","role","content","headers","process","env","REACT_APP_OPENAI_API_KEY","aiResponse","data","choices","message","didYouKnowFact","Math","floor","random","length","prevMessages","error","console","handleSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './ChatConversation.css';  // Importing the CSS file\n\nconst GPT_API_URL = 'https://api.openai.com/v1/chat/completions'; // OpenAI API URL\n\nconst topicsData = {\n  political: {\n    didYouKnow: [\n      \"Did you know that the first political parties emerged in the 18th century in the United States?\",\n      \"Did you know that many countries use proportional representation to ensure fair elections?\",\n      \"Did you know that the concept of democracy dates back to ancient Greece?\",\n      \"Did you know that political lobbying is a major influence on legislation in many countries?\",\n      \"Did you know that voter turnout varies greatly between different countries and regions?\"\n    ]\n  },\n  emotional: {\n    didYouKnow: [\n      \"Did you know that emotional intelligence can be more important than IQ in achieving success?\",\n      \"Did you know that journaling can help improve emotional well-being?\",\n      \"Did you know that practicing mindfulness can reduce stress and anxiety?\",\n      \"Did you know that social support is crucial for managing emotional health?\",\n      \"Did you know that physical exercise can significantly improve mood and mental health?\"\n    ]\n  },\n  scientific: {\n    didYouKnow: [\n      \"Did you know that water makes up about 71% of Earth's surface?\",\n      \"Did you know that light from the Sun takes about 8 minutes to reach Earth?\",\n      \"Did you know that the human brain is about 75% water?\",\n      \"Did you know that the universe is about 13.8 billion years old?\",\n      \"Did you know that honey never spoils and can be edible for thousands of years?\"\n    ]\n  }\n};\n\nfunction ChatConversation() {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n\n  useEffect(() => {\n    if (topicsData[topic]) {\n      const initialMessage = `Hello! Let's talk about ${topic}. Feel free to ask me anything related to ${topic}.`;\n      setMessages([{ text: initialMessage }]);\n    }\n  }, [topic]);\n\n  const generateResponse = async (userMessage) => {\n    try {\n      setIsTyping(true);\n\n      const response = await axios.post(\n        GPT_API_URL,\n        {\n          model: \"gpt-4\",\n          messages: [\n            { role: \"user\", content: userMessage }\n          ]\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      const aiResponse = response.data.choices[0].message.content;\n      const didYouKnowFact = topicsData[topic].didYouKnow[Math.floor(Math.random() * topicsData[topic].didYouKnow.length)];\n\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: aiResponse },\n        { text: `Did you know? ${didYouKnowFact}` }\n      ]);\n      setIsTyping(false);\n\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: \"Sorry, I couldn't generate a response right now.\" }\n      ]);\n      setIsTyping(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (input.trim() === '') {\n      return;\n    }\n\n    const userMessage = { text: input };\n    setMessages([...messages, userMessage]);\n\n    generateResponse(input);\n    setInput('');\n  };\n\n  return (\n    <div className=\"chat-conversation\">\n      <h1>Conversation on {topic}</h1>\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <p key={index} className=\"message\">{msg.text}</p>\n        ))}\n        {isTyping && <p className=\"message typing\">AI is typing...</p>}\n      </div>\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n          className=\"input-field\"\n        />\n        <button type=\"submit\" className=\"send-button\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}