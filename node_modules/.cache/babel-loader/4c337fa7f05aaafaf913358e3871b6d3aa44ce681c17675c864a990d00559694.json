{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  useEffect(() => {\n    fetch(`http://localhost:3000/buddies/${id}`).then(response => response.json()).then(data => {\n      const filteredQuestions = data.questions.filter(q => {\n        // Filter questions based on the selected topic\n        if (topic === 'political') return q.includes('political');\n        if (topic === 'emotional') return q.includes('emotional');\n        if (topic === 'scientific') return q.includes('scientific');\n        return false;\n      });\n      setQuestions(filteredQuestions);\n    });\n\n    // Initialize with an introductory message\n    setMessages([{\n      text: `Let's talk about ${topic}.`\n    }]);\n  }, [id, topic]);\n  const generateResponse = userMessage => {\n    // Generate a response based on the user's message and the current question\n    if (questionIndex < questions.length) {\n      return questions[questionIndex];\n    } else {\n      return \"Let's continue the conversation.\";\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = {\n      text: input\n    };\n    setMessages([...messages, newMessage]);\n\n    // Generate and add AI's response\n    const aiResponse = generateResponse(input);\n    setMessages(prevMessages => [...prevMessages, newMessage, {\n      text: aiResponse\n    }]);\n\n    // Move to the next question\n    if (questionIndex < questions.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"DaKmEyAVHsiaidvSQALLdKDSxlg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","questionIndex","setQuestionIndex","fetch","then","response","json","data","filteredQuestions","filter","q","includes","text","generateResponse","userMessage","length","handleSubmit","e","preventDefault","newMessage","aiResponse","prevMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/buddies/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        const filteredQuestions = data.questions.filter(q => {\n          // Filter questions based on the selected topic\n          if (topic === 'political') return q.includes('political');\n          if (topic === 'emotional') return q.includes('emotional');\n          if (topic === 'scientific') return q.includes('scientific');\n          return false;\n        });\n        setQuestions(filteredQuestions);\n      });\n\n    // Initialize with an introductory message\n    setMessages([{ text: `Let's talk about ${topic}.` }]);\n  }, [id, topic]);\n\n  const generateResponse = (userMessage) => {\n    // Generate a response based on the user's message and the current question\n    if (questionIndex < questions.length) {\n      return questions[questionIndex];\n    } else {\n      return \"Let's continue the conversation.\";\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = { text: input };\n    setMessages([...messages, newMessage]);\n\n    // Generate and add AI's response\n    const aiResponse = generateResponse(input);\n    setMessages(prevMessages => [...prevMessages, newMessage, { text: aiResponse }]);\n\n    // Move to the next question\n    if (questionIndex < questions.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n\n    setInput('');\n  };\n\n  return (\n    <div>\n      <h1>Conversation on {topic}</h1>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}>{msg.text}</p>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}