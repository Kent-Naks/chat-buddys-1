{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [needsExplanation, setNeedsExplanation] = useState(false);\n  const [currentFact, setCurrentFact] = useState('');\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    // Fetch data from db.json and set the initial conversation and questions\n    fetch('/db.json').then(response => response.json()).then(data => {\n      setMessages(data.conversations[id] ? data.conversations[id][topic] : []);\n      if (data.buddies[id]) {\n        setQuestions(data.buddies[id].questions || []);\n      }\n    });\n  }, [id, topic]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    // Scroll to the bottom of the chat whenever messages change\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userMessage = input.trim();\n    if (!userMessage) return; // Prevent sending empty messages\n\n    const newMessage = {\n      text: userMessage,\n      sender: 'user'\n    };\n    if (needsExplanation) {\n      if (userMessage.toLowerCase() === 'no') {\n        setMessages(prevMessages => [...prevMessages, newMessage, {\n          text: `No problem! Here's more information: ${getExplanation(currentFact, topic)}`,\n          sender: 'buddy'\n        }]);\n        setNeedsExplanation(false); // Reset the state after providing the explanation\n        setCurrentFact(''); // Clear the current fact\n      } else {\n        setMessages(prevMessages => [...prevMessages, newMessage, {\n          text: \"Got it! Feel free to ask for another fact.\",\n          sender: 'buddy'\n        }]);\n        setNeedsExplanation(false); // Reset the state after the user acknowledged the fact\n        setCurrentFact('');\n      }\n      setInput('');\n      return;\n    }\n\n    // Continue with regular handling if no explanation is needed\n    const greetingResponse = getGreetingResponse(userMessage);\n    if (greetingResponse) {\n      setMessages(prevMessages => [...prevMessages, newMessage, {\n        text: greetingResponse,\n        sender: 'buddy'\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n      const response = getAIResponse(userMessage, topic);\n      if (response) {\n        const isKnownFact = checkIfKnownFact(userMessage, topic);\n        if (isKnownFact) {\n          setMessages(prevMessages => [...prevMessages, {\n            text: \"Nice and knowledgeable of you! Would you like to hear another fact?\",\n            sender: 'buddy'\n          }]);\n          setCurrentFact(response);\n          setNeedsExplanation(true); // Set the flag to true to await explanation request\n        } else {\n          setMessages(prevMessages => [...prevMessages, {\n            text: response,\n            sender: 'buddy'\n          }]);\n        }\n      }\n      if (questionIndex < questions.length) {\n        setMessages(prevMessages => [...prevMessages, {\n          text: questions[questionIndex],\n          sender: 'buddy'\n        }]);\n        setQuestionIndex(questionIndex + 1);\n      }\n    }\n    setInput('');\n  };\n  const getAIResponse = (userInput, topic) => {\n    const responses = {\n      political: [\"Did you know that the United Nations was founded in 1945?\", \"Did you know that democracy originated in ancient Greece?\", \"Did you know that the United States has a two-party system?\", \"Did you know that the European Union is a political and economic union?\", \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"],\n      emotional: [\"Did you know that expressing gratitude can increase happiness?\", \"Did you know that laughter triggers the release of endorphins?\", \"Did you know that music can influence your emotions?\", \"Did you know that talking to friends can reduce stress?\", \"Did you know that physical touch can lower blood pressure?\"],\n      scientific: [\"Did you know that water makes up about 71% of the Earth's surface?\", \"Did you know that the speed of light is approximately 299,792 kilometers per second?\", \"Did you know that humans share 60% of their DNA with bananas?\", \"Did you know that the universe is estimated to be 13.8 billion years old?\", \"Did you know that honey never spoils?\"]\n    };\n    const facts = responses[topic] || [];\n    return facts[Math.floor(Math.random() * facts.length)];\n  };\n  const getGreetingResponse = userInput => {\n    const greetings = {\n      'hey': 'Hey there! How can I help you today?',\n      'morning': 'Good morning! How’s your day going?',\n      'hello': 'Hello! What’s up?',\n      'hi': 'Hi! What can I do for you today?',\n      'good evening': 'Good evening! How was your day?'\n    };\n    const lowerInput = userInput.toLowerCase();\n    return greetings[lowerInput];\n  };\n  const checkIfKnownFact = (userInput, topic) => {\n    const responses = {\n      political: [\"Did you know that the United Nations was founded in 1945?\", \"Did you know that democracy originated in ancient Greece?\", \"Did you know that the United States has a two-party system?\", \"Did you know that the European Union is a political and economic union?\", \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"],\n      emotional: [\"Did you know that expressing gratitude can increase happiness?\", \"Did you know that laughter triggers the release of endorphins?\", \"Did you know that music can influence your emotions?\", \"Did you know that talking to friends can reduce stress?\", \"Did you know that physical touch can lower blood pressure?\"],\n      scientific: [\"Did you know that water makes up about 71% of the Earth's surface?\", \"Did you know that the speed of light is approximately 299,792 kilometers per second?\", \"Did you know that humans share 60% of their DNA with bananas?\", \"Did you know that the universe is estimated to be 13.8 billion years old?\", \"Did you know that honey never spoils?\"]\n    };\n    const facts = responses[topic] || [];\n    return facts.includes(userInput.trim());\n  };\n  const getExplanation = (fact, topic) => {\n    const explanations = {\n      political: {\n        \"Did you know that the United Nations was founded in 1945?\": \"The United Nations was established in 1945 to promote peace and cooperation among countries following the devastation of World War II.\",\n        \"Did you know that democracy originated in ancient Greece?\": \"Ancient Greece is often credited as the birthplace of democracy, where citizens had a direct role in decision-making.\",\n        \"Did you know that the United States has a two-party system?\": \"The U.S. political system is dominated by two major parties, the Democratic Party and the Republican Party, which influence much of its politics.\",\n        \"Did you know that the European Union is a political and economic union?\": \"The EU is a unique political and economic partnership between European countries that work together on various policies and regulations.\",\n        \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\": \"The Cold War was a state of political and military tension between the United States and the Soviet Union from the end of World War II until the collapse of the Soviet Union.\"\n      },\n      emotional: {\n        \"Did you know that expressing gratitude can increase happiness?\": \"Gratitude is linked to increased well-being and happiness because it shifts focus from what is lacking to what is present.\",\n        \"Did you know that laughter triggers the release of endorphins?\": \"Laughter triggers the release of endorphins, which are natural chemicals in the brain that promote a sense of well-being.\",\n        \"Did you know that music can influence your emotions?\": \"Music has the ability to evoke and modulate emotions, helping people manage feelings and enhance moods.\",\n        \"Did you know that talking to friends can reduce stress?\": \"Social interactions and support from friends can lower stress levels and improve mental health.\",\n        \"Did you know that physical touch can lower blood pressure?\": \"Physical touch, such as hugging or holding hands, can lower blood pressure and decrease stress levels.\"\n      },\n      scientific: {\n        \"Did you know that water makes up about 71% of the Earth's surface?\": \"Water covers a majority of the Earth's surface, with oceans making up about 71% of it, which is crucial for sustaining life.\",\n        \"Did you know that the speed of light is approximately 299,792 kilometers per second?\": \"The speed of light is a fundamental constant in physics, representing the fastest speed at which information or matter can travel.\",\n        \"Did you know that humans share 60% of their DNA with bananas?\": \"Humans and bananas share about 60% of their DNA, highlighting the shared genetic code among living organisms.\",\n        \"Did you know that the universe is estimated to be 13.8 billion years old?\": \"The age of the universe is estimated based on the rate of expansion and observations of cosmic background radiation.\",\n        \"Did you know that honey never spoils?\": \"Honey has natural preservatives and antibacterial properties, allowing it to remain edible for thousands of years.\"\n      }\n    };\n    return explanations[topic] ? explanations[topic][fact] : \"Sorry, I don't have more information on that at the moment.\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${message.sender === 'user' ? 'user-bubble' : 'buddy-bubble'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"chat-input\",\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-submit-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"rcOzsmeBSCizuOUVrCfDsZjtzJE=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","questionIndex","setQuestionIndex","needsExplanation","setNeedsExplanation","currentFact","setCurrentFact","chatEndRef","fetch","then","response","json","data","conversations","buddies","_chatEndRef$current","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","userMessage","trim","newMessage","text","sender","toLowerCase","prevMessages","getExplanation","greetingResponse","getGreetingResponse","getAIResponse","isKnownFact","checkIfKnownFact","length","userInput","responses","political","emotional","scientific","facts","Math","floor","random","greetings","lowerInput","includes","fact","explanations","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [needsExplanation, setNeedsExplanation] = useState(false);\n  const [currentFact, setCurrentFact] = useState('');\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    // Fetch data from db.json and set the initial conversation and questions\n    fetch('/db.json')\n      .then(response => response.json())\n      .then(data => {\n        setMessages(data.conversations[id] ? data.conversations[id][topic] : []);\n        if (data.buddies[id]) {\n          setQuestions(data.buddies[id].questions || []);\n        }\n      });\n  }, [id, topic]);\n\n  useEffect(() => {\n    // Scroll to the bottom of the chat whenever messages change\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const userMessage = input.trim();\n    if (!userMessage) return; // Prevent sending empty messages\n\n    const newMessage = { text: userMessage, sender: 'user' };\n\n    if (needsExplanation) {\n      if (userMessage.toLowerCase() === 'no') {\n        setMessages(prevMessages => [\n          ...prevMessages, \n          newMessage, \n          { text: `No problem! Here's more information: ${getExplanation(currentFact, topic)}`, sender: 'buddy' }\n        ]);\n        setNeedsExplanation(false); // Reset the state after providing the explanation\n        setCurrentFact(''); // Clear the current fact\n      } else {\n        setMessages(prevMessages => [\n          ...prevMessages, \n          newMessage, \n          { text: \"Got it! Feel free to ask for another fact.\", sender: 'buddy' }\n        ]);\n        setNeedsExplanation(false); // Reset the state after the user acknowledged the fact\n        setCurrentFact('');\n      }\n      setInput('');\n      return;\n    }\n\n    // Continue with regular handling if no explanation is needed\n    const greetingResponse = getGreetingResponse(userMessage);\n    if (greetingResponse) {\n      setMessages(prevMessages => [...prevMessages, newMessage, { text: greetingResponse, sender: 'buddy' }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n\n      const response = getAIResponse(userMessage, topic);\n      if (response) {\n        const isKnownFact = checkIfKnownFact(userMessage, topic);\n        if (isKnownFact) {\n          setMessages(prevMessages => [\n            ...prevMessages, \n            { text: \"Nice and knowledgeable of you! Would you like to hear another fact?\", sender: 'buddy' }\n          ]);\n          setCurrentFact(response);\n          setNeedsExplanation(true); // Set the flag to true to await explanation request\n        } else {\n          setMessages(prevMessages => [\n            ...prevMessages, \n            { text: response, sender: 'buddy' }\n          ]);\n        }\n      }\n\n      if (questionIndex < questions.length) {\n        setMessages(prevMessages => [\n          ...prevMessages, \n          { text: questions[questionIndex], sender: 'buddy' }\n        ]);\n        setQuestionIndex(questionIndex + 1);\n      }\n    }\n\n    setInput('');\n  };\n\n  const getAIResponse = (userInput, topic) => {\n    const responses = {\n      political: [\n        \"Did you know that the United Nations was founded in 1945?\",\n        \"Did you know that democracy originated in ancient Greece?\",\n        \"Did you know that the United States has a two-party system?\",\n        \"Did you know that the European Union is a political and economic union?\",\n        \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"\n      ],\n      emotional: [\n        \"Did you know that expressing gratitude can increase happiness?\",\n        \"Did you know that laughter triggers the release of endorphins?\",\n        \"Did you know that music can influence your emotions?\",\n        \"Did you know that talking to friends can reduce stress?\",\n        \"Did you know that physical touch can lower blood pressure?\"\n      ],\n      scientific: [\n        \"Did you know that water makes up about 71% of the Earth's surface?\",\n        \"Did you know that the speed of light is approximately 299,792 kilometers per second?\",\n        \"Did you know that humans share 60% of their DNA with bananas?\",\n        \"Did you know that the universe is estimated to be 13.8 billion years old?\",\n        \"Did you know that honey never spoils?\"\n      ]\n    };\n\n    const facts = responses[topic] || [];\n    return facts[Math.floor(Math.random() * facts.length)];\n  };\n\n  const getGreetingResponse = (userInput) => {\n    const greetings = {\n      'hey': 'Hey there! How can I help you today?',\n      'morning': 'Good morning! How’s your day going?',\n      'hello': 'Hello! What’s up?',\n      'hi': 'Hi! What can I do for you today?',\n      'good evening': 'Good evening! How was your day?'\n    };\n\n    const lowerInput = userInput.toLowerCase();\n    return greetings[lowerInput];\n  };\n\n  const checkIfKnownFact = (userInput, topic) => {\n    const responses = {\n      political: [\n        \"Did you know that the United Nations was founded in 1945?\",\n        \"Did you know that democracy originated in ancient Greece?\",\n        \"Did you know that the United States has a two-party system?\",\n        \"Did you know that the European Union is a political and economic union?\",\n        \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"\n      ],\n      emotional: [\n        \"Did you know that expressing gratitude can increase happiness?\",\n        \"Did you know that laughter triggers the release of endorphins?\",\n        \"Did you know that music can influence your emotions?\",\n        \"Did you know that talking to friends can reduce stress?\",\n        \"Did you know that physical touch can lower blood pressure?\"\n      ],\n      scientific: [\n        \"Did you know that water makes up about 71% of the Earth's surface?\",\n        \"Did you know that the speed of light is approximately 299,792 kilometers per second?\",\n        \"Did you know that humans share 60% of their DNA with bananas?\",\n        \"Did you know that the universe is estimated to be 13.8 billion years old?\",\n        \"Did you know that honey never spoils?\"\n      ]\n    };\n\n    const facts = responses[topic] || [];\n    return facts.includes(userInput.trim());\n  };\n\n  const getExplanation = (fact, topic) => {\n    const explanations = {\n      political: {\n        \"Did you know that the United Nations was founded in 1945?\": \"The United Nations was established in 1945 to promote peace and cooperation among countries following the devastation of World War II.\",\n        \"Did you know that democracy originated in ancient Greece?\": \"Ancient Greece is often credited as the birthplace of democracy, where citizens had a direct role in decision-making.\",\n        \"Did you know that the United States has a two-party system?\": \"The U.S. political system is dominated by two major parties, the Democratic Party and the Republican Party, which influence much of its politics.\",\n        \"Did you know that the European Union is a political and economic union?\": \"The EU is a unique political and economic partnership between European countries that work together on various policies and regulations.\",\n        \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\": \"The Cold War was a state of political and military tension between the United States and the Soviet Union from the end of World War II until the collapse of the Soviet Union.\"\n      },\n      emotional: {\n        \"Did you know that expressing gratitude can increase happiness?\": \"Gratitude is linked to increased well-being and happiness because it shifts focus from what is lacking to what is present.\",\n        \"Did you know that laughter triggers the release of endorphins?\": \"Laughter triggers the release of endorphins, which are natural chemicals in the brain that promote a sense of well-being.\",\n        \"Did you know that music can influence your emotions?\": \"Music has the ability to evoke and modulate emotions, helping people manage feelings and enhance moods.\",\n        \"Did you know that talking to friends can reduce stress?\": \"Social interactions and support from friends can lower stress levels and improve mental health.\",\n        \"Did you know that physical touch can lower blood pressure?\": \"Physical touch, such as hugging or holding hands, can lower blood pressure and decrease stress levels.\"\n      },\n      scientific: {\n        \"Did you know that water makes up about 71% of the Earth's surface?\": \"Water covers a majority of the Earth's surface, with oceans making up about 71% of it, which is crucial for sustaining life.\",\n        \"Did you know that the speed of light is approximately 299,792 kilometers per second?\": \"The speed of light is a fundamental constant in physics, representing the fastest speed at which information or matter can travel.\",\n        \"Did you know that humans share 60% of their DNA with bananas?\": \"Humans and bananas share about 60% of their DNA, highlighting the shared genetic code among living organisms.\",\n        \"Did you know that the universe is estimated to be 13.8 billion years old?\": \"The age of the universe is estimated based on the rate of expansion and observations of cosmic background radiation.\",\n        \"Did you know that honey never spoils?\": \"Honey has natural preservatives and antibacterial properties, allowing it to remain edible for thousands of years.\"\n      }\n    };\n\n    return explanations[topic] ? explanations[topic][fact] : \"Sorry, I don't have more information on that at the moment.\";\n  };\n\n  return (\n    <div className=\"chat-conversation\">\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`chat-bubble ${message.sender === 'user' ? 'user-bubble' : 'buddy-bubble'}`}\n          >\n            {message.text}\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n      <form onSubmit={handleSubmit} className=\"chat-input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className=\"chat-input\"\n          placeholder=\"Type your message...\"\n        />\n        <button type=\"submit\" className=\"chat-submit-button\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}