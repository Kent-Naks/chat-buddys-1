{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [fetchedResponses, setFetchedResponses] = useState({});\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    // Fetch responses from a JSON server or API\n    fetch('http://localhost:3001/responses').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setFetchedResponses(data)).catch(error => console.error('Fetching error:', error));\n  }, []);\n  useEffect(() => {\n    // Initialize conversation with a personalized greeting and topic introduction\n    if (fetchedResponses[topic]) {\n      const initialMessages = [{\n        text: \"Hi there! ðŸ˜Š I'm here to chat with you.\"\n      }, {\n        text: `Let's talk about ${topic}. What are your thoughts on this topic?`\n      }];\n      setMessages(initialMessages);\n    }\n  }, [topic, fetchedResponses]);\n  const generateResponse = userMessage => {\n    const lowerCaseMessage = userMessage.toLowerCase();\n\n    // Handle common greetings separately\n    const greetings = [\"hey\", \"hello\", \"hi\", \"good morning\", \"good afternoon\", \"good evening\"];\n    if (greetings.includes(lowerCaseMessage)) {\n      return \"Hello! How are you today?\";\n    }\n    if (fetchedResponses[topic]) {\n      for (const response of fetchedResponses[topic]) {\n        if (lowerCaseMessage.includes(response.trigger)) {\n          return response.response;\n        }\n      }\n      return \"That's an interesting point! Tell me more.\";\n    }\n    return \"I'm not sure how to respond to that, but I'm here to listen!\";\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') {\n      return;\n    }\n    const userMessage = {\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    setIsTyping(true); // Start typing simulation\n\n    // Simulate typing delay\n    setTimeout(() => {\n      const nextResponse = generateResponse(input);\n      setMessages(prevMessages => [...prevMessages, {\n        text: nextResponse\n      }]);\n      setIsTyping(false); // End typing simulation\n    }, 1000); // 1-second delay\n\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message typing\",\n        children: \"ChatBot is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"Jwg0qC1bf+UO1J7/vWQCPihGDig=\", false, function () {\n  return [useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","fetchedResponses","setFetchedResponses","isTyping","setIsTyping","fetch","then","response","ok","Error","json","data","catch","error","console","initialMessages","text","generateResponse","userMessage","lowerCaseMessage","toLowerCase","greetings","includes","trigger","handleSubmit","e","preventDefault","trim","setTimeout","nextResponse","prevMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [fetchedResponses, setFetchedResponses] = useState({});\n  const [isTyping, setIsTyping] = useState(false);\n\n  useEffect(() => {\n    // Fetch responses from a JSON server or API\n    fetch('http://localhost:3001/responses')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => setFetchedResponses(data))\n      .catch(error => console.error('Fetching error:', error));\n  }, []);\n\n  useEffect(() => {\n    // Initialize conversation with a personalized greeting and topic introduction\n    if (fetchedResponses[topic]) {\n      const initialMessages = [\n        { text: \"Hi there! ðŸ˜Š I'm here to chat with you.\" },\n        { text: `Let's talk about ${topic}. What are your thoughts on this topic?` },\n      ];\n      setMessages(initialMessages);\n    }\n  }, [topic, fetchedResponses]);\n\n  const generateResponse = (userMessage) => {\n    const lowerCaseMessage = userMessage.toLowerCase();\n\n    // Handle common greetings separately\n    const greetings = [\"hey\", \"hello\", \"hi\", \"good morning\", \"good afternoon\", \"good evening\"];\n    if (greetings.includes(lowerCaseMessage)) {\n      return \"Hello! How are you today?\";\n    }\n\n    if (fetchedResponses[topic]) {\n      for (const response of fetchedResponses[topic]) {\n        if (lowerCaseMessage.includes(response.trigger)) {\n          return response.response;\n        }\n      }\n      return \"That's an interesting point! Tell me more.\";\n    }\n    return \"I'm not sure how to respond to that, but I'm here to listen!\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (input.trim() === '') {\n      return;\n    }\n\n    const userMessage = { text: input };\n    setMessages([...messages, userMessage]);\n\n    setIsTyping(true); // Start typing simulation\n\n    // Simulate typing delay\n    setTimeout(() => {\n      const nextResponse = generateResponse(input);\n      setMessages(prevMessages => [...prevMessages, { text: nextResponse }]);\n      setIsTyping(false); // End typing simulation\n    }, 1000); // 1-second delay\n\n    setInput('');\n  };\n\n  return (\n    <div className=\"chat-conversation\">\n      <h1>Conversation on {topic}</h1>\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <p key={index} className=\"message\">{msg.text}</p>\n        ))}\n        {isTyping && <p className=\"message typing\">ChatBot is typing...</p>} {/* Simulate typing */}\n      </div>\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n          className=\"input-field\"\n        />\n        <button type=\"submit\" className=\"send-button\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,KAAK,GAAGH,WAAW,CAACI,GAAG,CAAC,OAAO,CAAC;EAEtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACAoB,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIT,mBAAmB,CAACS,IAAI,CAAC,CAAC,CACvCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd;IACA,IAAIgB,gBAAgB,CAACN,KAAK,CAAC,EAAE;MAC3B,MAAMoB,eAAe,GAAG,CACtB;QAAEC,IAAI,EAAE;MAA0C,CAAC,EACnD;QAAEA,IAAI,EAAE,oBAAoBrB,KAAK;MAA0C,CAAC,CAC7E;MACDG,WAAW,CAACiB,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAACpB,KAAK,EAAEM,gBAAgB,CAAC,CAAC;EAE7B,MAAMgB,gBAAgB,GAAIC,WAAW,IAAK;IACxC,MAAMC,gBAAgB,GAAGD,WAAW,CAACE,WAAW,CAAC,CAAC;;IAElD;IACA,MAAMC,SAAS,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,gBAAgB,EAAE,cAAc,CAAC;IAC1F,IAAIA,SAAS,CAACC,QAAQ,CAACH,gBAAgB,CAAC,EAAE;MACxC,OAAO,2BAA2B;IACpC;IAEA,IAAIlB,gBAAgB,CAACN,KAAK,CAAC,EAAE;MAC3B,KAAK,MAAMY,QAAQ,IAAIN,gBAAgB,CAACN,KAAK,CAAC,EAAE;QAC9C,IAAIwB,gBAAgB,CAACG,QAAQ,CAACf,QAAQ,CAACgB,OAAO,CAAC,EAAE;UAC/C,OAAOhB,QAAQ,CAACA,QAAQ;QAC1B;MACF;MACA,OAAO,4CAA4C;IACrD;IACA,OAAO,8DAA8D;EACvE,CAAC;EAED,MAAMiB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI3B,KAAK,CAAC4B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB;IACF;IAEA,MAAMT,WAAW,GAAG;MAAEF,IAAI,EAAEjB;IAAM,CAAC;IACnCD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEqB,WAAW,CAAC,CAAC;IAEvCd,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEnB;IACAwB,UAAU,CAAC,MAAM;MACf,MAAMC,YAAY,GAAGZ,gBAAgB,CAAClB,KAAK,CAAC;MAC5CD,WAAW,CAACgC,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;QAAEd,IAAI,EAAEa;MAAa,CAAC,CAAC,CAAC;MACtEzB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEVJ,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEZ,OAAA;IAAK2C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC5C,OAAA;MAAA4C,QAAA,GAAI,kBAAgB,EAACrC,KAAK;IAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChChD,OAAA;MAAK2C,SAAS,EAAC,UAAU;MAAAC,QAAA,GACtBnC,QAAQ,CAACwC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBnD,OAAA;QAAe2C,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEM,GAAG,CAACtB;MAAI,GAApCuB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACjD,CAAC,EACDjC,QAAQ,iBAAIf,OAAA;QAAG2C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACNhD,OAAA;MAAMoD,QAAQ,EAAEhB,YAAa;MAACO,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAClD5C,OAAA;QACEqD,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3C,KAAM;QACb4C,QAAQ,EAAGlB,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,mBAAmB;QAC/Bd,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFhD,OAAA;QAAQqD,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9C,EAAA,CAjGQD,gBAAgB;EAAA,QACNH,WAAW;AAAA;AAAA4D,EAAA,GADrBzD,gBAAgB;AAmGzB,eAAeA,gBAAgB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}