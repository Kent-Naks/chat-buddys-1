{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  useEffect(() => {\n    fetch(`http://localhost:3000/conversations/${id}?topic=${topic}`).then(response => response.json()).then(data => setMessages(data));\n    fetch(`http://localhost:3000/buddies/${id}`).then(response => response.json()).then(data => setQuestions(data.questions || []));\n  }, [id, topic]);\n  const generateResponse = userMessage => {\n    if (userMessage.toLowerCase().includes('hello') || userMessage.toLowerCase().includes('hi')) {\n      return 'Hello! How are you doing today?';\n    } else if (userMessage.toLowerCase().includes('how are you')) {\n      return 'I’m doing well, thank you! What’s on your mind?';\n    } else if (userMessage.toLowerCase().includes('favorite')) {\n      return `My favorite thing to do is chatting with friends! What about you?`;\n    } else if (questionIndex < questions.length) {\n      return questions[questionIndex];\n    } else {\n      return 'Tell me more!';\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newMessage = {\n      text: input\n    };\n    setMessages([...messages, newMessage]);\n    const response = generateResponse(input);\n    setMessages(prevMessages => [...prevMessages, newMessage, {\n      text: response\n    }]);\n    if (questionIndex < questions.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"DaKmEyAVHsiaidvSQALLdKDSxlg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","questionIndex","setQuestionIndex","fetch","then","response","json","data","generateResponse","userMessage","toLowerCase","includes","length","handleSubmit","e","preventDefault","newMessage","text","prevMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  \n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/conversations/${id}?topic=${topic}`)\n      .then(response => response.json())\n      .then(data => setMessages(data));\n\n    fetch(`http://localhost:3000/buddies/${id}`)\n      .then(response => response.json())\n      .then(data => setQuestions(data.questions || []));\n  }, [id, topic]);\n\n  const generateResponse = (userMessage) => {\n    if (userMessage.toLowerCase().includes('hello') || userMessage.toLowerCase().includes('hi')) {\n      return 'Hello! How are you doing today?';\n    } else if (userMessage.toLowerCase().includes('how are you')) {\n      return 'I’m doing well, thank you! What’s on your mind?';\n    } else if (userMessage.toLowerCase().includes('favorite')) {\n      return `My favorite thing to do is chatting with friends! What about you?`;\n    } else if (questionIndex < questions.length) {\n      return questions[questionIndex];\n    } else {\n      return 'Tell me more!';\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newMessage = { text: input };\n    setMessages([...messages, newMessage]);\n\n    const response = generateResponse(input);\n    setMessages(prevMessages => [...prevMessages, newMessage, { text: response }]);\n\n    if (questionIndex < questions.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n\n    setInput('');\n  };\n\n  return (\n    <div>\n      <h1>Conversation on {topic}</h1>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}>{msg.text}</p>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}