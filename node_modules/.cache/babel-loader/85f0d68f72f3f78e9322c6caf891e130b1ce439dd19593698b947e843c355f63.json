{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: npm install axios\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  useEffect(() => {\n    fetch(`http://localhost:3000/conversations/${id}?topic=${topic}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setMessages(data)).catch(error => console.error(\"Error fetching conversation:\", error));\n\n    // Fetch buddy's questions\n    fetch(`http://localhost:3000/buddies/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setQuestions(data.questions || [])).catch(error => console.error(\"Error fetching buddy's questions:\", error));\n  }, [id, topic]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = {\n      text: input\n    };\n    setMessages([...messages, newMessage]);\n\n    // Generate AI response\n    try {\n      const aiResponse = await getAIResponse(input, topic);\n      if (aiResponse) {\n        setMessages(prevMessages => [...prevMessages, newMessage, {\n          text: aiResponse\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n    }\n\n    // Display the next question\n    if (questionIndex < questions.length) {\n      setMessages(prevMessages => [...prevMessages, {\n        text: questions[questionIndex]\n      }]);\n      setQuestionIndex(questionIndex + 1);\n    }\n    setInput('');\n  };\n  const getAIResponse = async (userInput, topic) => {\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci/completions', {\n        prompt: `Topic: ${topic}\\nUser: ${userInput}\\nAI:`,\n        max_tokens: 150,\n        temperature: 0.7\n      }, {\n        headers: {\n          'Authorization': `Bearer YOUR_API_KEY`\n        }\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      console.error(\"Error communicating with AI:\", error);\n      return \"Sorry, I couldn't understand that.\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"DaKmEyAVHsiaidvSQALLdKDSxlg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","axios","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","questionIndex","setQuestionIndex","fetch","then","response","ok","Error","status","json","data","catch","error","console","handleSubmit","e","preventDefault","newMessage","text","aiResponse","getAIResponse","prevMessages","length","userInput","post","prompt","max_tokens","temperature","headers","choices","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: npm install axios\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  \n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/conversations/${id}?topic=${topic}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => setMessages(data))\n      .catch(error => console.error(\"Error fetching conversation:\", error));\n  \n    // Fetch buddy's questions\n    fetch(`http://localhost:3000/buddies/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => setQuestions(data.questions || []))\n      .catch(error => console.error(\"Error fetching buddy's questions:\", error));\n  }, [id, topic]);\n  \n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = { text: input };\n    setMessages([...messages, newMessage]);\n\n    // Generate AI response\n    try {\n      const aiResponse = await getAIResponse(input, topic);\n      if (aiResponse) {\n        setMessages(prevMessages => [...prevMessages, newMessage, { text: aiResponse }]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n    }\n\n    // Display the next question\n    if (questionIndex < questions.length) {\n      setMessages(prevMessages => [...prevMessages, { text: questions[questionIndex] }]);\n      setQuestionIndex(questionIndex + 1);\n    }\n\n    setInput('');\n  };\n\n  const getAIResponse = async (userInput, topic) => {\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci/completions', {\n        prompt: `Topic: ${topic}\\nUser: ${userInput}\\nAI:`,\n        max_tokens: 150,\n        temperature: 0.7\n      }, {\n        headers: {\n          'Authorization': `Bearer YOUR_API_KEY`\n        }\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      console.error(\"Error communicating with AI:\", error);\n      return \"Sorry, I couldn't understand that.\";\n    }\n  };\n\n  return (\n    <div>\n      <h1>Conversation on {topic}</h1>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}>{msg.text}</p>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}