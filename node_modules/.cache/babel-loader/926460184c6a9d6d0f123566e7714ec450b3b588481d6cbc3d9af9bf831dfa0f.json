{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState({\n    personal: [],\n    professional: [],\n    random: []\n  });\n  const [questionIndex, setQuestionIndex] = useState({\n    personal: 0,\n    professional: 0,\n    random: 0\n  });\n  const [currentCategory, setCurrentCategory] = useState('personal');\n  const [categoryOrder, setCategoryOrder] = useState(['personal', 'professional', 'random']);\n  useEffect(() => {\n    // Fetch buddy's questions categorized by topic\n    fetch(`http://localhost:3000/buddies/${id}`).then(response => response.json()).then(data => {\n      setQuestions({\n        personal: data.personalQuestions || [],\n        professional: data.professionalQuestions || [],\n        random: data.randomQuestions || []\n      });\n    });\n  }, [id]);\n  const getNextCategory = () => {\n    const currentIndex = categoryOrder.indexOf(currentCategory);\n    const nextIndex = (currentIndex + 1) % categoryOrder.length;\n    return categoryOrder[nextIndex];\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = {\n      text: input\n    };\n    setMessages([...messages, newMessage]);\n\n    // Display the next question from the current category\n    const currentQuestions = questions[currentCategory];\n    const index = questionIndex[currentCategory];\n    if (index < currentQuestions.length) {\n      const nextQuestion = currentQuestions[index];\n      setMessages(prevMessages => [...prevMessages, newMessage, {\n        text: nextQuestion\n      }]);\n      setQuestionIndex(prevIndex => ({\n        ...prevIndex,\n        [currentCategory]: prevIndex[currentCategory] + 1\n      }));\n    }\n\n    // Switch to the next category for the next question\n    const nextCategory = getNextCategory();\n    setCurrentCategory(nextCategory);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"K2t3u5Mybge6VbMglVtK0uuJApk=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","personal","professional","random","questionIndex","setQuestionIndex","currentCategory","setCurrentCategory","categoryOrder","setCategoryOrder","fetch","then","response","json","data","personalQuestions","professionalQuestions","randomQuestions","getNextCategory","currentIndex","indexOf","nextIndex","length","handleSubmit","e","preventDefault","newMessage","text","currentQuestions","index","nextQuestion","prevMessages","prevIndex","nextCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  \n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState({\n    personal: [],\n    professional: [],\n    random: []\n  });\n  const [questionIndex, setQuestionIndex] = useState({ personal: 0, professional: 0, random: 0 });\n  const [currentCategory, setCurrentCategory] = useState('personal');\n  const [categoryOrder, setCategoryOrder] = useState(['personal', 'professional', 'random']);\n\n  useEffect(() => {\n    // Fetch buddy's questions categorized by topic\n    fetch(`http://localhost:3000/buddies/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        setQuestions({\n          personal: data.personalQuestions || [],\n          professional: data.professionalQuestions || [],\n          random: data.randomQuestions || []\n        });\n      });\n  }, [id]);\n\n  const getNextCategory = () => {\n    const currentIndex = categoryOrder.indexOf(currentCategory);\n    const nextIndex = (currentIndex + 1) % categoryOrder.length;\n    return categoryOrder[nextIndex];\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = { text: input };\n    setMessages([...messages, newMessage]);\n\n    // Display the next question from the current category\n    const currentQuestions = questions[currentCategory];\n    const index = questionIndex[currentCategory];\n\n    if (index < currentQuestions.length) {\n      const nextQuestion = currentQuestions[index];\n      setMessages(prevMessages => [...prevMessages, newMessage, { text: nextQuestion }]);\n      setQuestionIndex(prevIndex => ({\n        ...prevIndex,\n        [currentCategory]: prevIndex[currentCategory] + 1\n      }));\n    }\n\n    // Switch to the next category for the next question\n    const nextCategory = getNextCategory();\n    setCurrentCategory(nextCategory);\n\n    setInput('');\n  };\n\n  return (\n    <div>\n      <h1>Conversation on {topic}</h1>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}>{msg.text}</p>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}