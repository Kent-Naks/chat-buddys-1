{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [fetchedResponses, setFetchedResponses] = useState({});\n  useEffect(() => {\n    // Fetch responses from a JSON server or API\n    fetch('http://localhost:3001/responses').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setFetchedResponses(data)).catch(error => console.error('Fetching error:', error));\n  }, []);\n  useEffect(() => {\n    // Initialize conversation with a greeting and topic introduction\n    if (fetchedResponses[topic]) {\n      var _fetchedResponses$top;\n      const initialMessages = [{\n        text: \"Hello! How are you today?\"\n      }, {\n        text: `Let's talk about ${topic}. Here's something to get us started...`\n      }, {\n        text: ((_fetchedResponses$top = fetchedResponses[topic][0]) === null || _fetchedResponses$top === void 0 ? void 0 : _fetchedResponses$top.response) || \"Let's dive into the topic!\"\n      }];\n      setMessages(initialMessages);\n    }\n  }, [topic, fetchedResponses]);\n  const generateResponse = userMessage => {\n    if (fetchedResponses[topic]) {\n      for (const response of fetchedResponses[topic]) {\n        if (userMessage.toLowerCase().includes(response.trigger)) {\n          return response.response;\n        }\n      }\n      return \"That's an interesting point. What more can you share?\";\n    }\n    return \"I'm not sure how to respond to that.\";\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') {\n      return;\n    }\n    const userMessage = {\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    const nextResponse = generateResponse(input);\n    setMessages(prevMessages => [...prevMessages, {\n      text: nextResponse\n    }]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"rlf2OxiJGFPpMs6xdUqhDummyMA=\", false, function () {\n  return [useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","fetchedResponses","setFetchedResponses","fetch","then","response","ok","Error","json","data","catch","error","console","_fetchedResponses$top","initialMessages","text","generateResponse","userMessage","toLowerCase","includes","trigger","handleSubmit","e","preventDefault","trim","nextResponse","prevMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [fetchedResponses, setFetchedResponses] = useState({});\n\n  useEffect(() => {\n    // Fetch responses from a JSON server or API\n    fetch('http://localhost:3001/responses')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => setFetchedResponses(data))\n      .catch(error => console.error('Fetching error:', error));\n  }, []);\n\n  useEffect(() => {\n    // Initialize conversation with a greeting and topic introduction\n    if (fetchedResponses[topic]) {\n      const initialMessages = [\n        { text: \"Hello! How are you today?\" },\n        { text: `Let's talk about ${topic}. Here's something to get us started...` },\n        { text: fetchedResponses[topic][0]?.response || \"Let's dive into the topic!\" }\n      ];\n      setMessages(initialMessages);\n    }\n  }, [topic, fetchedResponses]);\n\n  const generateResponse = (userMessage) => {\n    if (fetchedResponses[topic]) {\n      for (const response of fetchedResponses[topic]) {\n        if (userMessage.toLowerCase().includes(response.trigger)) {\n          return response.response;\n        }\n      }\n      return \"That's an interesting point. What more can you share?\";\n    }\n    return \"I'm not sure how to respond to that.\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (input.trim() === '') {\n      return;\n    }\n\n    const userMessage = { text: input };\n    setMessages([...messages, userMessage]);\n\n    const nextResponse = generateResponse(input);\n    setMessages(prevMessages => [...prevMessages, { text: nextResponse }]);\n\n    setInput('');\n  };\n\n  return (\n    <div>\n      <h1>Conversation on {topic}</h1>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}>{msg.text}</p>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}