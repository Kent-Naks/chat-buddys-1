{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    fetch('/db.json').then(response => response.json()).then(data => {\n      setMessages(data.conversations[id] ? data.conversations[id][topic] : []);\n    });\n    fetch('/db.json').then(response => response.json()).then(data => {\n      if (data.buddies[id]) {\n        setQuestions(data.buddies[id].questions || []);\n      }\n    });\n  }, [id, topic]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userMessage = input.trim();\n    const newMessage = {\n      text: userMessage,\n      sender: 'user'\n    };\n    setMessages([...messages, newMessage]);\n    const response = getAIResponse(userMessage, topic);\n    if (response) {\n      const isKnownFact = checkIfKnownFact(userMessage, topic);\n      if (isKnownFact) {\n        setMessages(prevMessages => [...prevMessages, newMessage, {\n          text: \"Nice and knowledgeable of you!\",\n          sender: 'buddy'\n        }]);\n      } else {\n        setMessages(prevMessages => [...prevMessages, newMessage, {\n          text: response,\n          sender: 'buddy'\n        }]);\n      }\n    }\n    if (questionIndex < questions.length) {\n      setMessages(prevMessages => [...prevMessages, {\n        text: questions[questionIndex],\n        sender: 'buddy'\n      }]);\n      setQuestionIndex(questionIndex + 1);\n    }\n    setInput('');\n  };\n  const getAIResponse = (userInput, topic) => {\n    const greetings = {\n      'hey': 'Hey there! How can I help you today?',\n      'morning': 'Good morning! How’s your day going?',\n      'hello': 'Hello! What’s up?',\n      'hi': 'Hi! What can I do for you today?',\n      'good evening': 'Good evening! How was your day?'\n    };\n    const responses = {\n      political: [\"Did you know that the United Nations was founded in 1945?\", \"Did you know that democracy originated in ancient Greece?\", \"Did you know that the United States has a two-party system?\", \"Did you know that the European Union is a political and economic union?\", \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"],\n      emotional: [\"Did you know that expressing gratitude can increase happiness?\", \"Did you know that laughter triggers the release of endorphins?\", \"Did you know that music can influence your emotions?\", \"Did you know that talking to friends can reduce stress?\", \"Did you know that physical touch can lower blood pressure?\"],\n      scientific: [\"Did you know that water makes up about 71% of the Earth's surface?\", \"Did you know that the speed of light is approximately 299,792 kilometers per second?\", \"Did you know that humans share 60% of their DNA with bananas?\", \"Did you know that the universe is estimated to be 13.8 billion years old?\", \"Did you know that honey never spoils?\"]\n    };\n\n    // Check for greeting\n    const lowerInput = userInput.toLowerCase();\n    if (Object.keys(greetings).includes(lowerInput)) {\n      return greetings[lowerInput];\n    }\n\n    // Handle fact responses\n    const facts = responses[topic] || [];\n    return facts[Math.floor(Math.random() * facts.length)];\n  };\n  const checkIfKnownFact = (userInput, topic) => {\n    const responses = {\n      political: [\"Did you know that the United Nations was founded in 1945?\", \"Did you know that democracy originated in ancient Greece?\", \"Did you know that the United States has a two-party system?\", \"Did you know that the European Union is a political and economic union?\", \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"],\n      emotional: [\"Did you know that expressing gratitude can increase happiness?\", \"Did you know that laughter triggers the release of endorphins?\", \"Did you know that music can influence your emotions?\", \"Did you know that talking to friends can reduce stress?\", \"Did you know that physical touch can lower blood pressure?\"],\n      scientific: [\"Did you know that water makes up about 71% of the Earth's surface?\", \"Did you know that the speed of light is approximately 299,792 kilometers per second?\", \"Did you know that humans share 60% of their DNA with bananas?\", \"Did you know that the universe is estimated to be 13.8 billion years old?\", \"Did you know that honey never spoils?\"]\n    };\n    const facts = responses[topic] || [];\n    return facts.includes(userInput.trim());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"KfGPSNOaOYgJxDTq1J89GRohTeI=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useLocation","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","questionIndex","setQuestionIndex","chatEndRef","fetch","then","response","json","data","conversations","buddies","_chatEndRef$current","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","userMessage","trim","newMessage","text","sender","getAIResponse","isKnownFact","checkIfKnownFact","prevMessages","length","userInput","greetings","responses","political","emotional","scientific","lowerInput","toLowerCase","Object","keys","includes","facts","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  \n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    fetch('/db.json')\n      .then(response => response.json())\n      .then(data => {\n        setMessages(data.conversations[id] ? data.conversations[id][topic] : []);\n      });\n\n    fetch('/db.json')\n      .then(response => response.json())\n      .then(data => {\n        if (data.buddies[id]) {\n          setQuestions(data.buddies[id].questions || []);\n        }\n      });\n  }, [id, topic]);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const userMessage = input.trim();\n    const newMessage = { text: userMessage, sender: 'user' };\n    setMessages([...messages, newMessage]);\n\n    const response = getAIResponse(userMessage, topic);\n    if (response) {\n      const isKnownFact = checkIfKnownFact(userMessage, topic);\n      if (isKnownFact) {\n        setMessages(prevMessages => [...prevMessages, newMessage, { text: \"Nice and knowledgeable of you!\", sender: 'buddy' }]);\n      } else {\n        setMessages(prevMessages => [...prevMessages, newMessage, { text: response, sender: 'buddy' }]);\n      }\n    }\n\n    if (questionIndex < questions.length) {\n      setMessages(prevMessages => [...prevMessages, { text: questions[questionIndex], sender: 'buddy' }]);\n      setQuestionIndex(questionIndex + 1);\n    }\n\n    setInput('');\n  };\n\n  const getAIResponse = (userInput, topic) => {\n    const greetings = {\n      'hey': 'Hey there! How can I help you today?',\n      'morning': 'Good morning! How’s your day going?',\n      'hello': 'Hello! What’s up?',\n      'hi': 'Hi! What can I do for you today?',\n      'good evening': 'Good evening! How was your day?'\n    };\n\n    const responses = {\n      political: [\n        \"Did you know that the United Nations was founded in 1945?\",\n        \"Did you know that democracy originated in ancient Greece?\",\n        \"Did you know that the United States has a two-party system?\",\n        \"Did you know that the European Union is a political and economic union?\",\n        \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"\n      ],\n      emotional: [\n        \"Did you know that expressing gratitude can increase happiness?\",\n        \"Did you know that laughter triggers the release of endorphins?\",\n        \"Did you know that music can influence your emotions?\",\n        \"Did you know that talking to friends can reduce stress?\",\n        \"Did you know that physical touch can lower blood pressure?\"\n      ],\n      scientific: [\n        \"Did you know that water makes up about 71% of the Earth's surface?\",\n        \"Did you know that the speed of light is approximately 299,792 kilometers per second?\",\n        \"Did you know that humans share 60% of their DNA with bananas?\",\n        \"Did you know that the universe is estimated to be 13.8 billion years old?\",\n        \"Did you know that honey never spoils?\"\n      ]\n    };\n\n    // Check for greeting\n    const lowerInput = userInput.toLowerCase();\n    if (Object.keys(greetings).includes(lowerInput)) {\n      return greetings[lowerInput];\n    }\n\n    // Handle fact responses\n    const facts = responses[topic] || [];\n    return facts[Math.floor(Math.random() * facts.length)];\n  };\n\n  const checkIfKnownFact = (userInput, topic) => {\n    const responses = {\n      political: [\n        \"Did you know that the United Nations was founded in 1945?\",\n        \"Did you know that democracy originated in ancient Greece?\",\n        \"Did you know that the United States has a two-party system?\",\n        \"Did you know that the European Union is a political and economic union?\",\n        \"Did you know that the Cold War was a period of geopolitical tension between the US and USSR?\"\n      ],\n      emotional: [\n        \"Did you know that expressing gratitude can increase happiness?\",\n        \"Did you know that laughter triggers the release of endorphins?\",\n        \"Did you know that music can influence your emotions?\",\n        \"Did you know that talking to friends can reduce stress?\",\n        \"Did you know that physical touch can lower blood pressure?\"\n      ],\n      scientific: [\n        \"Did you know that water makes up about 71% of the Earth's surface?\",\n        \"Did you know that the speed of light is approximately 299,792 kilometers per second?\",\n        \"Did you know that humans share 60% of their DNA with bananas?\",\n        \"Did you know that the universe is estimated to be 13.8 billion years old?\",\n        \"Did you know that honey never spoils?\"\n      ]\n    };\n\n    const facts = responses[topic] || [];\n    return facts.includes(userInput.trim());\n  };\n\n  return (\n    <div className=\"chat-conversation\">\n      <h1>Conversation on {topic}</h1>\n      <div className=\"chat-container\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            <div className={`chat-bubble ${msg.sender}`}>\n              <p>{msg.text}</p>\n            </div>\n          </div>\n        ))}\n        <div ref={chatEndRef} /> {/* This div helps to scroll to the bottom */}\n      </div>\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          className=\"input-field\"\n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n        />\n        <button type=\"submit\" className=\"send-button\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}