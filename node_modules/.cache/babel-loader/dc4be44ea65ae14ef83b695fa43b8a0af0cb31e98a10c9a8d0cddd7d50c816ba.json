{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/chat-buddys-1/src/ChatConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: npm install axios\nimport './ChatConversation.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatConversation() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  useEffect(() => {\n    fetch(`http://localhost:3008/conversations/${id}?topic=${topic}`).then(response => response.json()).then(data => setMessages(data));\n\n    // Fetch buddy's questions\n    fetch(`http://localhost:3008/buddies/${id}`).then(response => response.json()).then(data => setQuestions(data.questions || []));\n  }, [id, topic]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = {\n      text: input,\n      role: 'user'\n    };\n    setMessages([...messages, newMessage]);\n\n    // Generate AI response\n    try {\n      const aiResponse = await getAIResponse(input, topic);\n      if (aiResponse) {\n        setMessages(prevMessages => [...prevMessages, newMessage, {\n          text: aiResponse,\n          role: 'ai'\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n    }\n\n    // Display the next question\n    if (questionIndex < questions.length) {\n      setMessages(prevMessages => [...prevMessages, {\n        text: questions[questionIndex],\n        role: 'bot'\n      }]);\n      setQuestionIndex(questionIndex + 1);\n    }\n    setInput('');\n  };\n  const getAIResponse = async (userInput, topic) => {\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci/completions', {\n        prompt: `Topic: ${topic}\\nUser: ${userInput}\\nAI:`,\n        max_tokens: 150,\n        temperature: 0.7\n      }, {\n        headers: {\n          'Authorization': `Bearer YOUR_API_KEY`\n        }\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      console.error(\"Error communicating with AI:\", error);\n      return \"Sorry, I couldn't understand that.\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Conversation on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.role}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatConversation, \"DaKmEyAVHsiaidvSQALLdKDSxlg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatConversation;\nexport default ChatConversation;\nvar _c;\n$RefreshReg$(_c, \"ChatConversation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","axios","jsxDEV","_jsxDEV","ChatConversation","_s","id","location","queryParams","URLSearchParams","search","topic","get","messages","setMessages","input","setInput","questions","setQuestions","questionIndex","setQuestionIndex","fetch","then","response","json","data","handleSubmit","e","preventDefault","newMessage","text","role","aiResponse","getAIResponse","prevMessages","error","console","length","userInput","post","prompt","max_tokens","temperature","headers","choices","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/chemelil/chat-buddys-1/src/ChatConversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: npm install axios\nimport './ChatConversation.css';  // Importing the CSS file\n\nfunction ChatConversation() {\n  const { id } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const topic = queryParams.get('topic');\n  \n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  useEffect(() => {\n    fetch(`http://localhost:3008/conversations/${id}?topic=${topic}`)\n      .then(response => response.json())\n      .then(data => setMessages(data));\n\n    // Fetch buddy's questions\n    fetch(`http://localhost:3008/buddies/${id}`)\n      .then(response => response.json())\n      .then(data => setQuestions(data.questions || []));\n  }, [id, topic]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Add user's message\n    const newMessage = { text: input, role: 'user' };\n    setMessages([...messages, newMessage]);\n\n    // Generate AI response\n    try {\n      const aiResponse = await getAIResponse(input, topic);\n      if (aiResponse) {\n        setMessages(prevMessages => [...prevMessages, newMessage, { text: aiResponse, role: 'ai' }]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n    }\n\n    // Display the next question\n    if (questionIndex < questions.length) {\n      setMessages(prevMessages => [...prevMessages, { text: questions[questionIndex], role: 'bot' }]);\n      setQuestionIndex(questionIndex + 1);\n    }\n\n    setInput('');\n  };\n\n  const getAIResponse = async (userInput, topic) => {\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci/completions', {\n        prompt: `Topic: ${topic}\\nUser: ${userInput}\\nAI:`,\n        max_tokens: 150,\n        temperature: 0.7\n      }, {\n        headers: {\n          'Authorization': `Bearer YOUR_API_KEY`\n        }\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      console.error(\"Error communicating with AI:\", error);\n      return \"Sorry, I couldn't understand that.\";\n    }\n  };\n\n  return (\n    <div className=\"chat-conversation\">\n      <h1>Conversation on {topic}</h1>\n      <div className=\"chat-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-bubble ${msg.role}`}>\n            <p>{msg.text}</p>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input \n          type=\"text\" \n          value={input} \n          onChange={(e) => setInput(e.target.value)} \n          placeholder=\"Type a message...\" \n          className=\"input-field\"\n        />\n        <button type=\"submit\" className=\"send-button\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatConversation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,wBAAwB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,KAAK,GAAGH,WAAW,CAACI,GAAG,CAAC,OAAO,CAAC;EAEtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAErDC,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,uCAAuCf,EAAE,UAAUK,KAAK,EAAE,CAAC,CAC9DW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,WAAW,CAACW,IAAI,CAAC,CAAC;;IAElC;IACAJ,KAAK,CAAC,iCAAiCf,EAAE,EAAE,CAAC,CACzCgB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,YAAY,CAACO,IAAI,CAACR,SAAS,IAAI,EAAE,CAAC,CAAC;EACrD,CAAC,EAAE,CAACX,EAAE,EAAEK,KAAK,CAAC,CAAC;EAEf,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAEf,KAAK;MAAEgB,IAAI,EAAE;IAAO,CAAC;IAChDjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEgB,UAAU,CAAC,CAAC;;IAEtC;IACA,IAAI;MACF,MAAMG,UAAU,GAAG,MAAMC,aAAa,CAAClB,KAAK,EAAEJ,KAAK,CAAC;MACpD,IAAIqB,UAAU,EAAE;QACdlB,WAAW,CAACoB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEL,UAAU,EAAE;UAAEC,IAAI,EAAEE,UAAU;UAAED,IAAI,EAAE;QAAK,CAAC,CAAC,CAAC;MAC9F;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;;IAEA;IACA,IAAIhB,aAAa,GAAGF,SAAS,CAACoB,MAAM,EAAE;MACpCvB,WAAW,CAACoB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;QAAEJ,IAAI,EAAEb,SAAS,CAACE,aAAa,CAAC;QAAEY,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;MAC/FX,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;IACrC;IAEAH,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMiB,aAAa,GAAG,MAAAA,CAAOK,SAAS,EAAE3B,KAAK,KAAK;IAChD,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMtB,KAAK,CAACsC,IAAI,CAAC,uDAAuD,EAAE;QACzFC,MAAM,EAAE,UAAU7B,KAAK,WAAW2B,SAAS,OAAO;QAClDG,UAAU,EAAE,GAAG;QACfC,WAAW,EAAE;MACf,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,eAAe,EAAE;QACnB;MACF,CAAC,CAAC;MACF,OAAOpB,QAAQ,CAACE,IAAI,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACd,IAAI,CAACe,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO,oCAAoC;IAC7C;EACF,CAAC;EAED,oBACEhC,OAAA;IAAK2C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC5C,OAAA;MAAA4C,QAAA,GAAI,kBAAgB,EAACpC,KAAK;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChChD,OAAA;MAAK2C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BlC,QAAQ,CAACuC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBnD,OAAA;QAAiB2C,SAAS,EAAE,eAAeO,GAAG,CAACtB,IAAI,EAAG;QAAAgB,QAAA,eACpD5C,OAAA;UAAA4C,QAAA,EAAIM,GAAG,CAACvB;QAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADTG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhD,OAAA;MAAMoD,QAAQ,EAAE7B,YAAa;MAACoB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAClD5C,OAAA;QACEqD,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1C,KAAM;QACb2C,QAAQ,EAAG/B,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,mBAAmB;QAC/Bd,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFhD,OAAA;QAAQqD,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9C,EAAA,CAxFQD,gBAAgB;EAAA,QACRL,SAAS,EACPC,WAAW;AAAA;AAAA6D,EAAA,GAFrBzD,gBAAgB;AA0FzB,eAAeA,gBAAgB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}